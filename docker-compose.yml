services:
  postgres:
    image: postgres:alpine
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: pedro
      POSTGRES_PASSWORD: pedrosenha
    networks:
      - webnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pedro"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  app1:
    build: ./app1
    ports:
      - "8001:8000"
    environment:
      DOCKER_ENV: 'true'
    networks:
      - webnet
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    restart: unless-stopped

  app2:
    build: ./app2
    ports:
      - "8002:8000"
    environment:
      DOCKER_ENV: 'true'
    networks:
      - webnet
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    restart: unless-stopped

networks:
  webnet:

volumes:
  pgdata: