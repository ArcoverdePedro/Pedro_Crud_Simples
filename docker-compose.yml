services:
  db:
    image: postgres:alpine
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=crud_pedro
      - POSTGRES_USER=pedro
      - POSTGRES_PASSWORD=pedrosenha
    networks:
      - webnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pedro -d crud_pedro"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  app1:
    build: ./app1
    ports:
      - "8001:8000"
    environment:
      - DATABASE_HOST=db
      - DATABASE_NAME=crud_pedro
      - DATABASE_USER=pedro
      - DATABASE_PASSWORD=pedrosenha
    networks:
      - interno
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    restart: unless-stopped

  app2:
    build: ./app2
    ports:
      - "8002:8000"
    environment:
      - DATABASE_HOST=db
      - DATABASE_NAME=crud_pedro
      - DATABASE_USER=pedro
      - DATABASE_PASSWORD=pedrosenha
    networks:
      - interno
    depends_on:
<<<<<<< HEAD
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
=======
      - db
    restart: unless-stopped

  db:
    image: postgres:alpine
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=crud_pedro
      - POSTGRES_USER=pedro
      - POSTGRES_PASSWORD=pedrosenha
    networks:
      - interno
>>>>>>> main
    restart: unless-stopped

networks:
  interno:

volumes:
  pgdata: